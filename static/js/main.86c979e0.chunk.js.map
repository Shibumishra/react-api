{"version":3,"sources":["Form.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","name","setName","email","setEmail","address","setAddress","style","textAlign","onSubmit","e","preventDefault","padding","margin","type","value","placeholder","onChange","target","onClick","console","log","axios","post","then","response","catch","error","Tables","userData","setUserData","username","setUserName","phone","setPhone","userId","setUserId","getList","fetch","result","json","resp","useEffect","Table","striped","bordered","hover","variant","map","id","method","deleteUser","items","selectUser","item","headers","body","JSON","stringify","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86c979e0.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Form = () => {\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n\r\n\r\n    const submitData = (e) => {\r\n        e.preventDefault()\r\n    }\r\n    \r\n    /// POST API ////\r\n    const saveUser = () =>{\r\n        console.log(\"save\", name,email,address)\r\n        axios.post('https://60cce86871b73400171f8b70.mockapi.io/Users', {\r\n                name: name,\r\n                email: email,\r\n                address: address\r\n          })\r\n          .then(function (response) {\r\n            console.log(response);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });   \r\n    }\r\n\r\n    return ( <div style={{textAlign: \"center\"}}>\r\n        <h1>POST Api Example</h1>\r\n        <form onSubmit={submitData}>\r\n            <input  \r\n            style={{padding: \"10px\",margin: \"10px\"}} \r\n            type=\"text\"  value={name} placeholder=\"enter name\" onChange={(e)=>{setName(e.target.value)}} name=\"name\" /> <br/>\r\n            <input  \r\n            style={{padding: \"10px\",margin: \"10px\"}} \r\n            type=\"text\"  value={email} placeholder=\"enter email\" onChange={(e)=>{setEmail(e.target.value)}} name=\"email\"/> <br/>\r\n            <input  \r\n            style={{padding: \"10px\",margin: \"10px\"}} \r\n            type=\"text\"  value={address} placeholder=\"enter address\" onChange={(e)=>{setAddress(e.target.value)}} name=\"address\"/> <br/>\r\n            <button type=\"button\" onClick={saveUser}>Save New User</button> \r\n        </form>\r\n    </div> );\r\n}\r\n \r\nexport default Form;","import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst Tables = () => {\r\n    const [userData, setUserData] = useState([])\r\n    const [name, setName] = useState(\"\")\r\n    const [username, setUserName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [userId, setUserId]=useState(null)\r\n\r\n    useEffect(() => {\r\n        getList()\r\n    }, [])\r\n\r\n    //GET API\r\n    function getList(){\r\n        fetch('https://60cce86871b73400171f8b70.mockapi.io/admin').then((result)=>{\r\n            result.json().then((resp)=>{\r\n                setUserData(resp)\r\n                setName(resp[0].name)\r\n                setUserName(resp[0].username)\r\n                setEmail(resp[0].email)\r\n                setPhone(resp[0].phone)\r\n                setUserId(resp[0].userId)\r\n                \r\n            })\r\n        })\r\n    }\r\n\r\n    ///DELETE API\r\n       const deleteUser = (id) => {\r\n           fetch(`https://60cce86871b73400171f8b70.mockapi.io/admin/${id}`,{\r\n               method:'DELETE'\r\n           }).then((result)=>{\r\n               result.json().then((resp)=>{\r\n                   console.log(resp)\r\n                   getList()\r\n               })\r\n           })\r\n       }\r\n\r\n\r\n    const submitData = (e) => {\r\n        e.preventDefault()\r\n    }\r\n     const selectUser = (id) => {\r\n         const items= userData[id-1]\r\n         console.log(items)\r\n         setName(items.name)\r\n         setUserName(items.username)\r\n         setEmail(items.email)\r\n         setPhone(items.phone)\r\n         setUserId(items.userId)\r\n     }\r\n\r\n     ///PUT API\r\n     const updateUser=()=> {\r\n         const item = {name,username,email,phone,userId}\r\n         fetch(`https://60cce86871b73400171f8b70.mockapi.io/admin/${userId}`,{\r\n            method:'PUT',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify(item)\r\n        }).then((result)=>{\r\n            result.json().then((resp)=>{\r\n                console.log(resp)\r\n                getList()\r\n            })\r\n        })\r\n     }\r\n    return ( <>\r\n   <Table striped bordered hover variant=\"dark\">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>Name</th>\r\n      <th>Username</th>\r\n      <th>Email Id</th>\r\n      <th>phone no.</th>\r\n      <th>Operations</th>\r\n      <th>Pre-filled</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {userData.map(({email, name, id, phone, username})=> \r\n    <tr key={id}>\r\n        <td>{id}</td>\r\n        <td>{name}</td>\r\n        <td>{username}</td>\r\n        <td>{email}</td>\r\n        <td>{phone}</td>\r\n        <td><button onClick={()=> {deleteUser(id)}}>Delete</button></td>\r\n        <td><button onClick={()=> {selectUser(id)}}>Update</button></td>\r\n    </tr>\r\n    )}\r\n    \r\n  </tbody>\r\n</Table>\r\n\r\n{/* Update Data */}\r\n\r\n<div style={{textAlign: \"center\"}}>\r\n    <form onSubmit={submitData}>\r\n    <input type=\"text\"  value={name} onChange={(e)=>setName(e.target.value)}/> <br /> <br />\r\n    <input type=\"text\"  value={username}  onChange={(e)=>setUserName(e.target.value)}/> <br /> <br />\r\n    <input type=\"text\"  value={email}   onChange={(e)=>setEmail(e.target.value)}/> <br /> <br />\r\n    <input type=\"text\"  value={phone}   onChange={(e)=>setPhone(e.target.value)}/> <br /><br />\r\n    <button onClick={updateUser}>Update User</button>\r\n    </form>\r\n</div>\r\n    </> );\r\n}\r\n \r\nexport default Tables;","import React from 'react';\nimport Form from './Form';\nimport Tables from './Table';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Form />\n      <br />\n      <br />\n      <br />\n      <br />\n      <Tables />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}